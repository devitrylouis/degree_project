{
    "collab_server" : "",
    "contents" : "# Fix some NAs\n\ntest$GarageYrBlt[is.na(test$GarageYrBlt)] <- mean(train$GarageYrBlt[!is.na(train$GarageYrBlt)])\ntest$MasVnrArea[is.na(test$MasVnrArea)] <- mean(train$MasVnrArea[!is.na(train$MasVnrArea)])\ntest$LotFrontage[is.na(test$LotFrontage)] <- mean(train$LotFrontage[!is.na(train$LotFrontage)])\n\n# Factoring categorical predictors\n\nnew_names <<- c('paved','regshape','alley_pave','flat','gentle_slope','cul_de_sac_fr3'\n                ,'nbhd_price_level','prox1','prox2','dwelling','house_style_price_level','roof_style'\n                ,'roof_matl','ext1_price_level','ext2_price_level','masonry_type'\n                ,'exterior_qual_level','exterior_cond_level','foundation_level'\n                ,'basement_qual_level','basement_cond_level','basement_exposure_level'\n                ,'basementfin_type1_level','basementfin_type2_level','heating_level'\n                ,'heating_qc_level','central_air_yes','electrical_level','kitchen_qual_level'\n                ,'functionality_level','fireplace_qual_level','garage_type_level'\n                ,'garage_finish_level','garage_qual_level','garage_cond_level'\n                ,'paved_driveway_level','pool_qc_level','fence_qual_level','sale_type_level'\n                ,'sale_condition_level','zoning_level')\n\n# Original names of the categorical predictors\n\nold_names <<- c('Street','LotShape','Alley','LandContour','LandSlope','LotConfig'\n                ,'Neighborhood','Condition1','Condition2','BldgType','HouseStyle'\n                ,'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType'\n                ,'ExterQual','ExterCond','Foundation','BsmtQual','BsmtCond'\n                ,'BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC'\n                ,'CentralAir','Electrical','KitchenQual','Functional','FireplaceQu'\n                ,'GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive'\n                ,'PoolQC','Fence','SaleType','SaleCondition','MSZoning')\n\n# Future list of the mean price per level for each predictor\n\nprice_summary <- list()\n\n# Factoring the data accoding to the aforementioned list\n\nfor (i in 1:length(old_names))\n{\n  # Construction of the list\n  \n  price_summary[[i]]<-summarize(group_by(train, train[[old_names[i]]]),mean(SalePrice, na.rm=T))\n  matrix<-as.matrix(price_summary[[i]])\n  \n  # Handling NA levels\n  \n  # Temporary variable to control NA values\n  \n  temp<-0\n  \n  # Factor NA level if any\n  \n  if(is.na(matrix[dim(matrix)[1],1]))\n  {\n    temp<-1\n    test[[new_names[i]]][is.na(test[[old_names[i]]])]<-matrix[dim(matrix)[1],2]\n  }\n  \n  # Factor non NA levels\n  \n  for (j in 1:(dim(matrix)[1]-temp))\n  {\n    test[[new_names[i]]][test[[old_names[i]]]==matrix[j,1]]<-matrix[j,2]\n  }\n  \n  # Convert factors into numeric ones\n  \n  test[[new_names[i]]]<-as.numeric(test[[new_names[i]]])\n}\n\n# Deleting factored/unwanted predictors\n\ntest$Id <- NULL\ntest$GrLivArea <- NULL\ntest$TotalBsmtSF <- NULL\ntest$Utilities<-NULL\ntest$MiscFeature <- NULL\ntest$MiscVal <- NULL\n\nassign(\"seqq\",which(colnames(test) %in% old_names))\n\n# Linear model preparation\n\n\n\n# Removing duplicate/unwanted columns\n\ndf_test <- test\ndf_test <- subset(df_test, select = -seqq )\n\ndf_test[[\"1stFlrSF 2\"]] <- df_test[[\"1stFlrSF\"]]^2\ndf_test[[\"GarageYrBlt 2\"]] <- df_test[[\"GarageYrBlt\"]]^2\ndf_test[[\"OpenPorchSF 2\"]] <- df_test[[\"OpenPorchSF\"]]^2\ndf_test[[\"BsmtFullBath 2\"]] <- df_test[[\"BsmtFullBath\"]]^2\ndf_test[[\"GarageYrBlt 3\"]] <- df_test[[\"GarageYrBlt\"]]^3\ndf_test[[\"LowQualFinSF 3\"]] <- df_test[[\"LowQualFinSF\"]]^3\ndf_test[[\"LotArea 3\"]] <- df_test[[\"LotArea\"]]^3\n\ndf_test[is.na(df_test)] <- 0\n\nfit.pred <- exp(predict(model_transformed,df_test))\nfit.pred.squared <- exp(predict(model_squared,df_test))\nfit.pred.squared.transformed <- exp(predict(model_squared_transformed,df_test))\n\nwrite.csv(data.frame(fit.pred),file = \"fit_pred.csv\")\nwrite.csv(data.frame(fit.pred.squared),file = \"fit_pred_squared.csv\")\nwrite.csv(data.frame(fit.pred.squared.transformed),file = \"fit_pred_squared_transformed.csv\")\n\n\n\nlasso.pred<-predict(lasso[[3]],s=lasso[[2]],as.matrix(df_test))\n\nlasso.pred<-exp(lasso.pred)\n\nwrite.csv(data.frame(lasso.pred),file=\"lasso.csv\")\n\n",
    "created" : 1492208460591.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2050820763",
    "id" : "2B7CAE01",
    "lastKnownWriteTime" : 1492211502,
    "last_content_update" : 1492211502088,
    "path" : "/Applications/test_submission.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}